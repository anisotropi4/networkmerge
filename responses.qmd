---
title: "Responses to reviewer comments"
---

Dear Prof. Arribas-Bel, reviewers and editorial team,

We thank you for the opportunity to revise our manuscript and for the constructive feedback provided by the reviewers. We have carefully considered all comments and suggestions and we are confident that the revisions have improved the manuscript. Below, we provide a detailed response to each of the reviewers' comments.

...

To help the review process, we have numbered each of the reviewers' comments and provided our responses with reference to these.

# Reviewer 1

- [ ] **R1.1** With the exception of [Section 3 Data and Methods] (and possibly [Section 1 Introduction]), all sections need a healthy fleshing out. There is simply not enough language, for example [Section 4 Application to Edinburgh City Centre] is only 3 sentences long. 

<!-- TODO: Check over the sections (RL) -->

- [ ] **R1.2** There are large swaths of the text that read choppily with no real transitions. 

# Reviewer 2

The paper tackles a task that is not easy - the simplification of road networks. While it provides reusable software and two different algorithms that solve the problem at hand, the paper itself lacks some key components that would allow users to properly evaluate the usefulness of this contribution. Please see the points below. 

- [x] **R2.1** My main comment relates to understanding how good these algorithms are and which is actually better. The paper provides no comparison of the two beyond the visual comparison in Figures 2 and 3. Nor does it provide any validation, leaving the reader without a much-needed understanding of the performance of the proposed methods. Do they do the job well? In which cases are they perfect and in which do they struggle? What are the limitations of the resulting geometry? The paper does not answer any of these questions. My suggestion is to include a section with an explicit comparison of the two methods and guidance on which should be used when. 

We have added a new section titled "Skeletonization versus Voronoi" which compares the two algorithms, compares their performance with reference to performance and size.
Importantly, we now highlight the performance benefits of the skeletonization approach for large networks, also highlighting the smoother output of the Voronoi approach.

- [ ] **R2.2** On top of that, it would be great to see a comparison to some ground truth data (I am not sure if the primal network is not that, see below). 

<!-- TODO:
We compared the outputs of our simplification methods against an independent and authoritative source of road network data, Ordnance Survey's OpenRoads data product. -->

- [x] **R2.3** The parenx API is rather unusual. One would assume that a Python package could be imported and used in memory, but this does not seem to be the case as the only documented API is the CLI. Which is strange in itself. Instead of using something like `parenx skeletonize in.geojson out.geojson` and `parenx voronoi in.geojson out.geojson`, which is a common model, it registers `skeletonize.py` and `voronoi.py`, suggesting a Python file rather than a function name. With proper documentation this is probably fine, I just find these choices really weird and incompatible with the rest of the ecosystem. 

We have updated the implementation of the methods in the `parenx` package, which has been updated on PyPI and GitHub:

- The package now exposes the core simplfication functions in the `parenx` namespace, so users and developers can import them directly in their Python code. These improvements are highlighted in the following example from the updated `parenx` documentation (previously this would have generated an error):

```python
import geopandas as gp
from parenx import skeletonize_frame, voronoi_frame, skeletonize_tiles, get_primal

CRS = "EPSG:27700"
filepath = "data/rnet_princes_street.geojson"
frame = gp.read_file(filepath).to_crs(CRS)

parameter = {"simplify": 0.0, "buffer": 8.0, "scale": 1.0, "knot": False, "segment": False}
r = skeletonize_frame(frame["geometry"], parameter)

parameter = {"simplify": 0.0, "scale": 5.0, "buffer": 8.0, "tolerance": 1.0}
r = voronoi_frame(frame["geometry"], parameter)

primal = get_primal(r)
```

See the appendix for more details on the CLI and the API.

- We have updated the function names to be more descriptive, e.g. `get_nx()` is now `get_primal()`, matching the description in the paper.
- We have provided a command-line interface (CLI) that works from shell environments, allowing users to run the methods without needing to write Python code. The CLI uses the command `parenx` and, as the reviewer suggested, takes the algorithm name as the first argument (either `skeletonize` or `voronoi`, without needing the `.py` suffix). 

## Other minor comments

- [ ] **R2.4** The title says that the algorithms are aimed at transport planning, but in the text the authors also mention other applications. This is a bit confusing. 
- [ ] **R2.5** The paper repeatedly refers to the appendix with a cookbook and the methods section. However, this appendix is not part of the review package. At least I could not find it anywhere. It is not possible for me to assess the details of any of the methods at this moment. 

- [x] **R2.6**  Line 14 on p. 2 contains "->", which probably should not be there. 

Done.

- [x] **R2.7**  Fleischmann and Vybornova n.d. seems to have been published in the meantime at 10.5311/JOSIS.2024.28.319. 

Done.

- [x] **R2.8** Suri et al. n.d. also appears to have been published at 10.14778/3494124.3494149. 

Done.

- [x] **R2.9**  The buffer chosen in section 3.1 is 8. Why? Is it better than 7 or 9? How is this determined? How should a user specify this in their case study? 

We have clarified in section 3.1 that the 8 m buffer was chosen to reflect UK road widths, referencing the Design Manual for Roads and Bridges (DMRB) and standard rail track separation. This value is now justified. We also state that the `buffer` argument in the simplification functions can be used to adjust the buffer size depending on reader/user needs in the main body of the paper.

- [x] **R2.10** P.5 l.31 contains a typo "skeltonisation". 

Done.

- [x] **R2.11** This may be in the appendix, which I haven't received, but the main text would also benefit from understanding the resolution of the raster component in skeletonisation and the reasoning behind it. 

We have explained the transformation and how it influences the results, e.g. to reduce the 'wiggliness' of the skeletonized output. We now state in the main body of the paper:

> This scale operation is a uniform affine scale transformation applied to increase the detail contained in the raster image. An increase in scale reduces undulation but at the cost of longer processing time and increased memory, which varies as the square of scale value. This transformation is scaled to ensure that the projected coordinate geometry of the network aligns accurately with the corresponding dimensions of the scaled raster image.

We now include the appendix in the submission.

- [x] **R2.12** The same applies to the segmentation step of the Voronoi-based approach, as this can significantly affect the result.

Details were included in the appendix, which is now included in the submission and appropriately referenced in the main body of the paper. 

- [ ] **R2.13**  I would suggest including titles for the columns in the figure for additional clarity and to eliminate the need to refer to the caption. 

- [x] **R2.14** Figure 3 contains a "primitive mesh". What is it, how was it created? It is unclear what we are looking at. 

We have clarified what this means with the following additional sentence:

> This highly simplified network is created by identifying all nodes in the network, counting the edges connected to each node, and removing all nodes that are connected to exactly two edges. Unconnected edges or those at intersections between edges are retained.

- [ ] **R2.15** Figure 3 contains images that are too small and it is difficult to see the differences. 

# Reviewer 3

- [x] **R3.1** Proofread the text for typos and unfinished sentences.
- [ ] **R3.2** Provide a clearer interpretation of `parenx` outcomes, especially in the "Edinburgh use case" section.
- [ ] **R3.3** Clarify the purpose of the paper in the abstract (e.g., presenting `parenx` for route network simplification).
- [ ] **R3.4** Specify the "new contexts" mentioned in the abstract.
- [x] **R3.5** Address issue #145.
- [ ] **R3.6** Clarify difference/overlap between "route network", "transport network data set", and "spatial networks".
- [ ] **R3.7** Broaden the applicability of route network simplification beyond transport model networks to argue for wider significance.
- [x] **R3.8** Add a citation for OSM mention.
- [x] **R3.9** Provide examples of "other applications" for which route network simplification is an "unsolved challenge".
- [ ] **R3.10** Move the aim of the paper statement earlier in the introduction.
- [ ] **R3.11** Explain why limitations of the existing approach are presented as a bulleted list in the problem definition. Clarify if they are identical to the problem definition.
- [ ] **R3.12** Include a "before/after" plot in the problem definition section to explain "simplification".
- [ ] **R3.13** In "Data and Methods," describe the data in addition to methods, and comment on the Edinburgh City Centre use case.
- [ ] **R3.14** Introduce references to Figure 2 subfigures in the methods subsections.
- [x] **R3.15** If the 8-meter buffer for skeletonization is use-case specific, move it to the use case description and justify the choice. If general, explain the reasoning.
- [x] **R3.16** Complete the last sentence of section 3.1 (skeletonization).
- [ ] **R3.17** Shorten or move the "joining route networks" subsection to discussion/future work if it's not part of `parenx` or the Edinburgh use case.
- [ ] **R3.18** Expand the "Application to Edinburgh" section, covering: why this use case, its particularities, goal of simplification, what readers should notice in Figure 4, evaluation of methods, and differences between `parenx` methods.
- [ ] **R3.19** Rephrase "we believe it has applications.." in the conclusion to be more confident about the applications and specify them.

# Comments from marked-up PDF file

- [ ] ... **PDF1** ... (please refer to the marked-up PDF file for specific comments).


# Additional changes made

